{"version":3,"sources":["actions.js","reducer.js","FetchTweets.js","Tweet.js","Tweets.js","index.js"],"names":["addTweets","tweets","type","payload","combineReducers","action","connect","fetchTweets","dispatch","fetch","then","response","json","react_default","a","createElement","onClick","className","Tweet","tweet","class","href","user","name","text","map","src_Tweet","key","id","store","createStore","reducer","applyMiddleware","thunk","Application","src_FetchTweets","src_Tweets","rootElement","document","getElementById","ReactDOM","render","es"],"mappings":"wOAAO,MAaMA,EAAYC,IAAM,CAC7BC,KAdwB,aAexBC,QAAS,CAAEF,YCJEG,kBAAgB,CAC7BH,OATa,CAACA,EAAS,GAAII,IDHH,eCIpBA,EAAOH,KACFG,EAAOF,QAAQF,OAGjBA,ICIMK,kBAAQ,KAAM,CAAEC,YFVJ,IAClBC,IAELC,MAAM,4CACHC,KAAKC,GAAYA,EAASC,QAC1BF,KAAKC,IACJH,EAASR,EAAUW,EAASV,aEIrBK,CARK,EAAGC,iBAEnBM,EAAAC,EAAAC,cAAA,UAAQC,QAAST,GACfM,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBAAf,wBCiBSC,MArBD,EAAGC,WAEbN,EAAAC,EAAAC,cAAA,MAAIK,MAAM,gBACRP,EAAAC,EAAAC,cAAA,KAAGM,KAAK,sCACNR,EAAAC,EAAAC,cAAA,OAAKK,MAAM,wBAETP,EAAAC,EAAAC,cAAA,cAEEF,EAAAC,EAAAC,cAAA,UAAKI,EAAMG,KAAKC,KAAhB,aAEFV,EAAAC,EAAAC,cAAA,SAAII,EAAMK,OAGZX,EAAAC,EAAAC,cAAA,OAAKK,MAAM,0BACTP,EAAAC,EAAAC,cAAA,oCCIKT,kBAFS,EAAGL,aAAH,CAAmBA,WAE5BK,CAhBA,EAAGL,SAAS,MAEvBY,EAAAC,EAAAC,cAAA,MAAIK,MAAM,gBAEPnB,EAAOwB,IAAKN,GAEXN,EAAAC,EAAAC,cAACW,EAAD,CAAOC,IAAKR,EAAMS,GAAIT,MAAOA,aCGrC,MAAMU,EAAQC,YAAYC,EAASC,YAAgBC,MAE7CC,EAAc,IAEhBrB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eAAd,gBACAJ,EAAAC,EAAAC,cAACoB,EAAD,MACAtB,EAAAC,EAAAC,cAACqB,EAAD,OAKAC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAUb,MAAOA,GACfhB,EAAAC,EAAAC,cAACmB,EAAD,OAEFG","file":"static/js/main.52eb2e8e.chunk.js","sourcesContent":["export const ADD_TWEETS = 'ADD_TWEETS';\r\n\r\nexport const fetchTweets = () => {\r\n  return dispatch => {\r\n    // dispatch(setStatusToLoading());\r\n    fetch('http://tweet-stream.glitch.me/api/tweets')\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        dispatch(addTweets(response.tweets));\r\n      });\r\n  };\r\n};\r\n\r\nexport const addTweets = tweets => ({\r\n  type: ADD_TWEETS,\r\n  payload: { tweets },\r\n});\r\n\r\n// export const setStatusToLoading = () => ({\r\n//   type: SET_STATUS,\r\n//   payload: { status: LOADING },\r\n// });\r\n","import { combineReducers } from 'redux';\r\nimport { ADD_TWEETS } from './actions';\r\n\r\nconst tweets = (tweets = [], action) => {\r\n  if (action.type === ADD_TWEETS) {\r\n    return action.payload.tweets;\r\n  }\r\n\r\n  return tweets;\r\n};\r\n\r\nexport default combineReducers({\r\n  tweets,\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchTweets } from './actions';\r\n\r\nconst FetchTweets = ({ fetchTweets }) => {\r\n  return (\r\n    <button onClick={fetchTweets}>\r\n      <div className=\"fetchTweetsButton\">Fetch Tweets</div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default connect(null, { fetchTweets })(FetchTweets);\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nconst Tweet = ({ tweet }) => {\r\n  return (\r\n    <li class=\"tile-twitter\">\r\n      <a href=\"https://twitter.com/chrisgrabinski\">\r\n        <div class=\"tile-primary-content\">\r\n          {/* <article className=\"Tweet\"> */}\r\n          <header>\r\n            {/* <h2>Twitter</h2> */}\r\n            <h2>{tweet.user.name} writes:</h2>\r\n          </header>\r\n          <p>{tweet.text}</p>\r\n          {/* </article> */}\r\n        </div>\r\n        <div class=\"tile-secondary-content\">\r\n          <p>Catch him on Twitter</p>\r\n        </div>\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Tweet from './Tweet';\r\n\r\nconst Tweets = ({ tweets = [] }) => {\r\n  return (\r\n    <ul class=\"masonry-list\">\r\n      {/* <section className=\"Tweets\"> */}\r\n      {tweets.map((tweet) => (\r\n        // <li class=\"tile-twitter\">\r\n        <Tweet key={tweet.id} tweet={tweet} />\r\n        // </li>\r\n      ))}\r\n      {/* </section> */}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ tweets }) => ({ tweets });\r\n\r\nexport default connect(mapStateToProps)(Tweets);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducer from './reducer';\r\n\r\nimport FetchTweets from './FetchTweets';\r\nimport Tweets from './Tweets';\r\n\r\nimport './styles.scss';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nconst Application = () => {\r\n  return (\r\n    <div className=\"Application\">\r\n      <h1 className=\"pageHeading\">Tweet Stream</h1>\r\n      <FetchTweets />\r\n      <Tweets />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Application />\r\n  </Provider>,\r\n  rootElement,\r\n);\r\n"],"sourceRoot":""}